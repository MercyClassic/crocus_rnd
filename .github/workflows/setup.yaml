name: setup
on:
  workflow_dispatch:
    push:
      branches: [ "develop" ]
    pull_request:
      branches: [ "main" ]
jobs:
  core:
    runs-on: ubuntu-22.04
    env:
        POSTGRES_USER: postgres
        POSTGRES_PASSWORD: postgres
        POSTGRES_DB: postgres
        POSTGRES_HOST: postgres
        POSTGRES_PORT: 5432

        SECRET_KEY: mock
        DJANGO_SETTINGS_MODULE: config.settings
        DEBUG: False
        REDIS_HOST: mock
        REDIS_PASSWORD: mock
        RABBITMQ_HOST: mock
        RABBITMQ_PORT: 5672
        ALLOWED_HOSTS: '[0.0.0.0]'
        CORS_ALLOWED_ORIGINS: '[http://0.0.0.0]'
        CSRF_TRUSTED_ORIGINS: '[http://0.0.0.0]'
        ROLLBAR_ACCESS_TOKEN: mock
        EMAIL_HOST: mock
        EMAIL_HOST_PASSWORD: mock
        TO_NOTIFICATION: mock
        TINKOFF_PAYMENT_URL: mock
        TINKOFF_TERMINAL_KEY: mock
        TINKOFF_PASSWORD: mock
        TINKOFF_TAXATION: mock
        TINKOFF_TAX: mock
        DELIVERY_PRICE: 1
    steps:
      - name: get source
        uses: actions/checkout@v4

      - name: install dependencies
        working-directory: ./backend/core
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run core ruff
        working-directory: ./backend/core
        run: ruff check .

      - name: Run container with app tests
        working-directory: ./docker
        run: docker compose -f docker-compose.test.yml up app_tests --build

  tg_bot:
    runs-on: ubuntu-22.04
    steps:
      - name: get source
        uses: actions/checkout@v4

      - name: install dependencies
        working-directory: ./backend/tg_bot
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run tg_bot ruff
        working-directory: ./backend/tg_bot
        run: ruff check .
