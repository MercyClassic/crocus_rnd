services:
  postgres:
    container_name: postgres
    image: postgres:15-alpine
    restart: always
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    healthcheck:
      test: [ "CMD-SHELL", "sh -c 'pg_isready -U postgres' || exit 1" ]
      interval: 5s
      timeout: 5s
      retries: 10
      start_period: 3s
  app_tests:
    container_name: app_tests
    restart: no
    build:
      context: ../backend/core
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_HOST=${POSTGRES_HOST}
      - POSTGRES_PORT=${POSTGRES_PORT}

      - SECRET_KEY=${SECRET_KEY}
      - DJANGO_SETTINGS_MODULE=${DJANGO_SETTINGS_MODULE}
      - DEBUG=${DEBUG}
      - REDIS_HOST=${REDIS_HOST}
      - REDIS_PASSWORD=${REDIS_PASSWORD}
      - RABBITMQ_HOST=${RABBITMQ_HOST}
      - RABBITMQ_PORT=${RABBITMQ_PORT}
      - ALLOWED_HOSTS=${ALLOWED_HOSTS}
      - CORS_ALLOWED_ORIGINS=${CORS_ALLOWED_ORIGINS}
      - CSRF_TRUSTED_ORIGINS=${CSRF_TRUSTED_ORIGINS}
      - ROLLBAR_ACCESS_TOKEN=${ROLLBAR_ACCESS_TOKEN}
      - EMAIL_HOST=${EMAIL_HOST}
      - EMAIL_HOST_PASSWORD=${EMAIL_HOST_PASSWORD}
      - TO_NOTIFICATION=${TO_NOTIFICATION}
      - TINKOFF_PAYMENT_URL=${TINKOFF_PAYMENT_URL}
      - TINKOFF_TERMINAL_KEY=${TINKOFF_TERMINAL_KEY}
      - TINKOFF_PASSWORD=${TINKOFF_PASSWORD}
      - TINKOFF_TAXATION=${TINKOFF_TAXATION}
      - TINKOFF_TAX=${TINKOFF_TAX}
      - DELIVERY_PRICE=${DELIVERY_PRICE}
    depends_on:
      postgres:
        condition: service_healthy
    command: python manage.py test
