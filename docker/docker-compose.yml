services:
  postgres:
    container_name: postgres
    image: postgres:15
    restart: always
    ports:
      - "5432:5432"
    env_file:
      - ../backend/core/.env
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    healthcheck:
      test: [ "CMD-SHELL", "sh -c 'pg_isready -d postgres' || exit 1" ]
      interval: 5s
      timeout: 10s
      retries: 10
      start_period: 1s
    networks:
      - main
  market:
    container_name: market
    restart: always
    build:
      context: ../backend/core
    volumes:
      - ../backend/core/src/media:/market/backend/core/src/media
      - ../backend/core/src/logs:/market/backend/core/src/logs
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - main
  telegram_bot:
    container_name: telegram_bot
    restart: always
    build:
      context: ../backend/tg_bot
    volumes:
      - ../backend/core/src/media:/market/backend/core/src/media
      - ../frontend/build/static/img:/market/frontend/build/static/img
    networks:
      - main
  nginx:
    image: nginx
    restart: always
    container_name: nginx
    depends_on:
      - market
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ../frontend/build:/var/market/build
      - ../backend/core/src/media:/var/market/media
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
      # - /etc/letsencrypt:/etc/letsencrypt
    healthcheck:
      test: [ "CMD", "service", "nginx", "status" ]
      interval: 30s
      timeout: 10s
      retries: 10
      start_period: 1s
    networks:
      - main
  redis:
    container_name: redis
    hostname: redis
    image: redis
    restart: always
    command: redis-server
    ports:
      - "6379:6379"
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 3s
      timeout: 10s
      retries: 30
      start_period: 1s
    networks:
      - main
networks:
  main:
    driver: bridge
volumes:
  postgres_data:
